#include<stdio.h>
#include<string.h>
#include<cs50.h>
#include<ctype.h>

int validate();

int main(int argc, string argv[])
{
    if(argc!=2) {printf("Incorrect use\n"); return 1;}
    string s=argv[1];
    validate(s);
    string input=get_string("plaintext:  ");
    int x=strlen(input);
    char ciphertext[x];
    string abc="abcdefghijklmnopqrstuvwxyz";
    for (int i=0; i<x; i++)
    {
        //convert upper case
        if (isupper(input[i]) !=0)
        {
            for (int j=0; j<26; j++)
            {
                if(abc[j] == tolower(input[i]))
                {
                    ciphertext[i] = toupper(s[j]);
                }
            }
        }
        //convert lower case
        else if (islower(input[i]) !=0)
        {
            for (int j=0; j<26; j++)
            {
                if(abc[j] == input[i])
                {
                    ciphertext[i] = tolower(s[j]);
                }
            }
        }
        //non-letter characters
        else (ciphertext[i]=input[i]);
    }
    printf("Your ciphertext is: %s\n",ciphertext);
}

int validate(string s)
{
    int letters=0; int matches=0; int tries=0;
    //check key length
    int a=strlen(s);
    if (a!=26) {printf("Not a valid key\n"); return 1;}
    //check key integrity
    for (letters='a'; letters<='z'; letters++)
    {
        tries=0;
        for (tries=0; tries<26; tries++)
        {
            if (tolower(s[tries])==letters)
            {
                tries=26;
                matches++;
            }
        }
    }
    printf("Number of unique letters: %i\n",matches);
    if(matches!=26)
    {
        printf("Not a valid key\n");
        return 1;
    }
    return 0;
}
